import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';

const token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2Njk0ZmVhNDE5NmQ3YjAwMTVkNmI1NDAiLCJpYXQiOjE3MjEwNDA1NDksImV4cCI6MTcyMjI1MDE0OX0.vaH3-EZNYJ0ikK0i8Rf1KmmSowfto3Kl9u0H1A5PVPw";

const initialState = {
  profile: {},
  status: "null",
  error: null,
};

export const fetchProfile = createAsyncThunk("profile/fetchProfile", async () => {
  const response = await fetch("https://striveschool-api.herokuapp.com/api/profile/me", {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });
  return response.json();
});

const profileReducer = createSlice({
  name: "profile",
  initialState,
  reducers: {},
  extraReducers(builder) {
    builder
      .addCase(fetchProfile.pending, (state) => {
        state.status = "loading";
      })
      .addCase(fetchProfile.fulfilled, (state, action) => {
        state.status = "succeeded";
        state.profile = action.payload;
      })
      .addCase(fetchProfile.rejected, (state, action) => {
        state.status = "failed";
        state.error = action.error.message;
      });
  },
});

export default profileReducer.reducer;
